{"version":3,"sources":["constants/pageStatus/exception.js","constants/pageStatus/user.js","constants/pageStatus/goods.js","constants/pageStatus/index.js","pages/Goods/styles.less","constants/entities.js","actions/goods.js","components/ViewImage/index.tsx","pages/Goods/Detail/BaseInfo.tsx","pages/Goods/Detail/CheckComment.tsx","pages/Goods/Detail/Comments.tsx","pages/Goods/Detail/Logistics.tsx","pages/Goods/Detail/index.tsx"],"names":["errInfo","404","403","500","UserCardType","1","2","3","4","5","6","7","GoodsState","10","20","21","22","23","30","31","32","33","34","Option","Select","getLabel","map","value","noneInfo","getOption","Object","entries","state","key","module","exports","userSchema","schema","Entity","idAttribute","user","id","goodsSchema","good","Schemas","USER","USER_ARRAY","GOOD","GOOD_ARRAY","getGoodsPageList","options","dispatch","CALL_API","type","GET_GOODS_PAGELIST","endpoint","closeOrder","payload","callback","getState","a","CLOSE_ORDER","method","code","message","success","filter","meta","filterGoods","goods","metaGoods","total","pageSize","current","pageCurrent","Math","ceil","getGoodsCommentsPageList","GET_GOODS_COMMENTS_PAGELIST","getGoodsLogistics","GET_GOODS_LOGISTICS","checkComment","CHECK_COMMENT","ViewImage","props","img","alt","set","index","setValue","src","length","defaultPage","DescriptionsItem","Descriptions","Item","BaseInfo","baseInfo","label","name","userName","span","showImage","imgs","className","description","linkCount","getTimeFormat","createDate","styles","discountPrice","originalPrice","remarks","buyerName","finalPrice","mailNo","mailName","FormItem","Form","TextArea","Input","RadioGroup","Radio","Group","CheckComment","useForm","form","visible","baseId","content","isLoading","handleCancel","resetFields","onCancel","title","maskClosable","okType","onOk","validateFields","then","values","onCheckCallback","onCheckComment","commentId","res","catch","info","console","log","confirmLoading","labelCol","xs","sm","wrapperCol","layout","showIcon","style","marginBottom","rules","required","getFieldValue","validator","rule","Promise","resolve","reject","dependencies","placeholder","Comments","onGetComment","commentCount","useState","comments","setComments","pagination","setPagination","setCheckComment","useEffect","handleGetComments","goodsId","response","commenrsWrap","valueStyle","color","handleRenderComments","commenes","getAction","comment","LikeOutlined","commentAction","likeCount","onClick","actions","author","avatar","toUserName","datetime","moment","format","fromNow","hideOnSinglePage","showSizeChanger","showQuickJumper","onChange","onShowSizeChange","_","textAlign","disabled","pre","TimelineItem","Timeline","Logistics","onGetLogistics","logistics","setLogistics","loading","active","logisticsName","expTextName","logisticsTime","updateStr","mode","Array","isArray","data","item","time","context","TabPane","Tabs","connect","system","historyParams","useParams","JSON","parse","decodeURIComponent","goodsInfo","defaultActiveKey","tab"],"mappings":"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","file":"static/js/12.3b18595a.chunk.js","sourcesContent":["/*\n * @Author: SongYijie\n * @Date: 2020-06-12 10:04:56\n * @LastEditors: SongYijie\n */ \nexport const errInfo = {\n  404: '发出的请求针对的是不存在的记录，服务器没有进行操作。',\n  403: '用户未得到授权。',\n  500: '服务器发生错误，请检查服务器。'\n}","/*\n * @Author: SongYijie\n * @Date: 2020-06-19 14:09:25\n * @LastEditors: SongYijie\n */ \nexport const UserCardType = {\n  1: '居民身份证',\n  2: '香港居民来往内地通行证',\n  3: '香港居民居住证',\n  4: '台湾居民往来大陆通行证',\n  5: '台湾居民居住证',\n  6: '澳门居民来往内地通行证',\n  7: '澳门居民居住证'\n}","/*\n * @Author: SongYijie\n * @Date: 2020-06-19 14:09:25\n * @LastEditors: SongYijie\n */ \nexport const GoodsState = {\n  10: '待出售',\n  20: '出售中',\n  21: '重新出售中',\n  22: '用户下架',\n  23: '系统下架',\n  30: '待支付',\n  31: '已支付',\n  32: '已发货',\n  33: '待评价',\n  34: '出售完成'\n}","/*\n * @Author: SongYijie\n * @Date: 2020-06-12 10:04:33\n * @LastEditors: SongYijie\n */\nimport React from 'react';\nimport { Select } from 'antd';\n\nimport { errInfo } from './exception';\nimport { UserCardType } from './user';\nimport { GoodsState } from './goods';\n\nconst{ Option } = Select;\n\n/**\n * @description: 根据 map 获取 lable\n * @param map 词典\n * @param value 值\n * @return: 对应的值或者 无\n */\nexport const getLabel = (map, value, noneInfo = '无') => map[value] || noneInfo;\n\n/**\n * @description: 根据 map 生成 Option\n * @param map 词典\n * @return: <Option></Option>\n */\nexport const getOption = map => (\n  Object.entries(map).map((state) => (\n    <Option value={state[0]} key={state[0]}>{state[1]}</Option>\n  ))\n)\n\nexport {\n  errInfo,\n  UserCardType,\n  GoodsState\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"commentAction\":\"commentAction_2HQVi\",\"commenrsWrap\":\"commenrsWrap_295ot\",\"discountPrice\":\"discountPrice_OteKq\",\"originalPrice\":\"originalPrice_1XApV\",\"finalPrice\":\"finalPrice_TgbCe\",\"logisticsName\":\"logisticsName_3esew\",\"logisticsTime\":\"logisticsTime_1wYzr\",\"warnInfo\":\"warnInfo_2ftjT\"};","/*\n * @Author: SongYijie\n * @Date: 2020-06-10 17:15:07\n * @LastEditors: SongYijie\n */ \nimport { schema } from 'normalizr';\n\nconst userSchema = new schema.Entity('users', {}, {\n  idAttribute: user => user.id\n});\n\nconst goodsSchema = new schema.Entity('goods', {}, {\n  idAttribute: good => good.id\n});\n\n// Schemas= for API responses.\nconst Schemas = {\n  USER: userSchema,\n  USER_ARRAY: [userSchema],\n  GOOD: goodsSchema,\n  GOOD_ARRAY: [goodsSchema]\n};\n\nexport default Schemas\n","/*\n * @Author: SongYijie\n * @Date: 2020-06-09 14:37:12\n * @LastEditors: SongYijie\n */ \nimport { CALL_API } from '@/middleware/api';\nimport { GET_GOODS_PAGELIST, CLOSE_ORDER, GET_GOODS_COMMENTS_PAGELIST, GET_GOODS_LOGISTICS, CHECK_COMMENT } from '@/constants/actionTypes';\nimport Schemas from '@/constants/entities';\nimport { message } from 'antd';\n\nexport const getGoodsPageList = options => dispatch => (\n  dispatch({\n    [CALL_API]: {\n      type: GET_GOODS_PAGELIST,\n      schema: Schemas.GOOD_ARRAY,\n      endpoint: '/goods',\n      options\n    }\n  })\n)\n\nexport const closeOrder = (payload, callback) => async (dispatch, getState) => {\n  const { code } = await dispatch({\n    [CALL_API]: {\n      type: CLOSE_ORDER,\n      endpoint: '/goods/closeOrder',\n      method: 'POST',\n      payload\n    }\n  });\n\n  if (code === 200) {\n    message.success('订单关闭成功');\n    callback();\n    const { filter, meta } = getState();\n    const filterGoods = filter.goods;\n    const metaGoods = meta.goods;\n    const options = {\n      ...filterGoods,\n      ...metaGoods\n    };\n    if (metaGoods) {\n      const { total, pageSize, current } = metaGoods;\n      if (total) {\n        let pageCurrent = Math.ceil((total - 1) / pageSize);\n        pageCurrent = current > pageCurrent ? (current - 1) : current;\n        pageCurrent = pageCurrent <= 0 ? 1 : pageCurrent;\n        options.current = pageCurrent;\n      }\n    }\n\n    dispatch(getGoodsPageList(options));\n  }\n}\n\nexport const getGoodsCommentsPageList = options => dispatch => (\n  dispatch({\n    [CALL_API]: {\n      type: GET_GOODS_COMMENTS_PAGELIST,\n      endpoint: '/goods/comments',\n      options\n    }\n  })\n)\n\nexport const getGoodsLogistics = options => dispatch => (\n  dispatch({\n    [CALL_API]: {\n      type: GET_GOODS_LOGISTICS,\n      endpoint: '/goods/logistics',\n      options\n    }\n  })\n)\n\nexport const checkComment = payload => dispatch => (\n  dispatch({\n    [CALL_API]: {\n      type: CHECK_COMMENT,\n      endpoint: '/goods/comments/check',\n      method: 'post',\n      payload\n    }\n  })\n)","/*\n * @Author: SongYijie\n * @Date: 2020-05-29 16:27:18\n * @LastEditors: SongYijie\n */ \nimport React from 'react';\nimport Zmage from 'react-zmage';\n\nimport { IViewImageProps } from '@/types';\n\nconst ViewImage = (props: IViewImageProps) => {\n  const { img, alt = '图片', set, index } = props;\n  const setValue = set.map((img: string, index: number) => ({\n    src: img,\n    alt: set.length > 0 ? `${alt}-${index}` : alt\n  }))\n  return (\n    <Zmage\n      src={img}\n      alt={alt}\n      set={setValue}\n      defaultPage={index}\n    />\n  )\n}\n\nexport default ViewImage;","import React from 'react';\nimport { Descriptions } from 'antd';\n\nimport { IGoodsBaseProps } from '@/types';\nimport { getTimeFormat } from '@/utils';\nimport { GoodsState, getLabel } from '@/constants/pageStatus';\nimport ViewImage from '@/components/ViewImage';\nimport styles from './../styles.less';\n\nconst { Item: DescriptionsItem } = Descriptions;\n\nconst BaseInfo = ({ baseInfo }: IGoodsBaseProps) => {\n\n  return (\n    <Descriptions>\n      <DescriptionsItem label=\"ID\">{baseInfo.id}</DescriptionsItem>\n      <DescriptionsItem label=\"名称\">{baseInfo.name}</DescriptionsItem>\n      <DescriptionsItem label=\"用户姓名\">{baseInfo.userName}</DescriptionsItem>\n      <DescriptionsItem label=\"商品图\" span={3}>\n        {\n          baseInfo.showImage.map((img: string, index: number, imgs: Array<string>) => (\n            <p className=\"small-image-preview\" key={index}><ViewImage img={img} alt=\"商品图\" set={imgs} index={index} /></p>\n          ))\n        }\n      </DescriptionsItem>\n      <DescriptionsItem label=\"状态\">{getLabel(GoodsState, baseInfo.state)}</DescriptionsItem>\n      <DescriptionsItem label=\"描述\">{baseInfo.description}</DescriptionsItem>\n      <DescriptionsItem label=\"喜爱数\">{baseInfo.linkCount}</DescriptionsItem>\n      <DescriptionsItem label=\"创建时间\">{getTimeFormat(baseInfo.createDate)}</DescriptionsItem>\n      <DescriptionsItem label=\"更新时间\">{getTimeFormat(baseInfo.createDate)}</DescriptionsItem>\n      <DescriptionsItem label=\"定价\">\n        <>\n          <span className={styles.discountPrice}>¥{baseInfo.discountPrice || 0}</span>\n          <span> / </span>\n          <span className={styles.originalPrice}>¥{baseInfo.originalPrice || 0}</span>\n        </>\n      </DescriptionsItem>\n      {\n        (baseInfo.state === 21 || baseInfo.state === 22 || baseInfo.state === 23) && <DescriptionsItem label=\"备注\" span={3}>{baseInfo.remarks}</DescriptionsItem>\n      }\n      {\n        baseInfo.state >= 30 && [\n          <DescriptionsItem label=\"购买者\" key=\"1\">{baseInfo.buyerName}</DescriptionsItem>,\n          <DescriptionsItem label=\"成交价\" key=\"2\" span={2}>\n            <span className={styles.finalPrice}>¥{baseInfo.finalPrice || 0}</span>\n          </DescriptionsItem>\n        ]\n      }\n      {\n        baseInfo.state >= 32 && [\n          <DescriptionsItem label=\"快递单号\" key=\"1\">{baseInfo.mailNo}</DescriptionsItem>,\n          <DescriptionsItem label=\"快递公司\" key=\"2\" span={2}>{baseInfo.mailName}</DescriptionsItem>\n        ]\n      }\n    </Descriptions>\n  );\n}\n\nexport default BaseInfo;","import React from 'react';\nimport { Form, Modal, Input, Alert, Radio } from 'antd';\n\nimport { ICheckCommentProps } from '@/types';\n\nconst { Item: FormItem } = Form;\nconst { TextArea } = Input;\nconst { Group: RadioGroup } = Radio;\n\nconst CheckComment = (props: ICheckCommentProps) => {\n  const [ form ] = Form.useForm();\n  const { visible, baseId, content, isLoading } = props;\n  const formItemLayout = {\n    labelCol: {\n      xs: { span: 24 },\n      sm: { span: 6 }\n    },\n    wrapperCol: {\n      xs: { span: 24 },\n      sm: { span: 17 }\n    }\n  };\n\n  const handleOk = () => {\n    form.validateFields().then(values => {\n      const { onCheckCallback, onCheckComment } = props;\n      onCheckComment({\n        ...values,\n        commentId: baseId\n      }).then((res: any) => {\n        if (res.code === 200) {\n          onCheckCallback(baseId, values.state, values.remarks);\n          handleCancel();\n        }\n      }); \n    }).catch(info => {\n      console.log('Validate Failed:', info);\n    });\n  }\n\n  const handleCancel = () => {\n    form.resetFields();\n    props.onCancel();\n  }\n\n  const options = [\n    { label: '通过', value: 2 },\n    { label: '拒绝', value: 3 }\n  ]\n\n  return (\n    <Modal\n      visible={visible}\n      title=\"审核评论\"\n      onCancel={handleCancel}\n      maskClosable={false}\n      okType=\"danger\"\n      onOk={handleOk}\n      confirmLoading={isLoading}\n    >\n      <Form\n        {...formItemLayout}\n        layout=\"horizontal\"\n        form={form}\n      >\n        <Alert\n          message=\"请审核以下评论是否合规\"\n          description={content}\n          type=\"info\"\n          showIcon\n          style={{ marginBottom: 12 }}\n        />\n\n        <FormItem\n          name=\"state\"\n          label=\"审核\"\n          rules={[{ required: true }]}\n        >\n          <RadioGroup\n            options={options}\n          />\n        </FormItem>\n        \n        <FormItem\n          name=\"remarks\"\n          label=\"原因\"\n          rules={[ ({ getFieldValue }) => ({\n            validator(rule, value) {\n              if (value || getFieldValue('state') === 2) {\n                return Promise.resolve();\n              }\n              return Promise.reject('请输入审核不通过的原因');\n            },\n          })]}\n          dependencies={['state']}\n        >\n          <TextArea placeholder='请输入原因' />\n        </FormItem>\n      </Form>\n    </Modal>\n    \n  )\n}\n\nexport default CheckComment;","import React, { useEffect, useState } from 'react';\nimport { Comment, Avatar, Tooltip, Pagination, Statistic, Button, Tag } from 'antd';\nimport {  LikeOutlined } from '@ant-design/icons';\nimport moment from 'moment';\n\nimport { IGoodsCommentsProps, IGoodsComment, IMeta } from '@/types';\nimport CheckComment from './CheckComment';\nimport styles from './../styles.less';\n\nconst Comments = (props: IGoodsCommentsProps) => {\n\n  const { baseId, onGetComment, commentCount, isLoading, onCheckComment } = props;\n  const [ comments, setComments ]: [ Array<IGoodsComment>, any ] = useState([]);\n  const [ pagination, setPagination ]: [ IMeta, any ] = useState({\n    current: 1,\n    pageSize: 10,\n    total: 0\n  });\n  const [ checkComment, setCheckComment ] = useState({\n    visible: false,\n    baseId: '',\n    content: ''\n  })\n\n  useEffect(() => {\n    handleGetComments(pagination);\n    // eslint-disable-next-line\n  }, [])\n\n  const handleGetComments = (values: any) => {\n    onGetComment({\n      ...values,\n      goodsId: baseId\n    }).then((res: any) => {\n      if (res.code === 200) {\n        setComments(res.response || []);\n        setPagination(res.meta || {})\n      }\n    })\n  }\n\n  const handlePaginationChange = (current: number) => {\n    handleGetComments({\n      ...pagination,\n      current\n    });\n  }\n\n  const handleShowSiezChange = (_:number, pageSize: number) => {\n    handleGetComments({\n      ...pagination,\n      current: 1,\n      pageSize\n    });\n  }\n\n  const handleCheck = (id: string, content: string) => {\n    setCheckComment({\n      visible: true,\n      baseId: id,\n      content: content\n    })\n  }\n\n  const handelCancel = () => {\n    setCheckComment({\n      visible: false,\n      baseId: '',\n      content: ''\n    })\n  }\n\n  const handleCheckCalllback = (id: string, state: 1 | 2 | 3, remarks?: string) => {\n    setComments((pre: Array<IGoodsComment>) => (\n      pre.map((comment: IGoodsComment) => {\n        if (comment.id === id) {\n          comment.state = state;\n          remarks && (comment.remarks = remarks);\n        }\n        return comment\n      })\n    ))\n  }\n\n  const handleRenderComments = (commenes: Array<IGoodsComment>) => {\n    const getAction = (comment: IGoodsComment) => ([\n      <span key=\"like\">\n        <LikeOutlined />\n        <span className={styles.commentAction}>{comment.likeCount}</span>\n      </span>,\n      <span key=\"operating\">\n        {\n          comment.state === 1 ? (\n            <Button type='link' onClick={() => handleCheck(comment.id, comment.content)}>审核</Button>\n          ) : [\n            <Tag key='1' color={comment.state === 2 ? '#87d068' : '#ff5500'}>{comment.state === 2 ? '审核通过' : '审核不通过'}</Tag>,\n            <span key='2'> {comment.remarks}</span>\n          ]\n        }\n      </span>\n    ]);\n    return (\n      commenes.map((comment: IGoodsComment, index: number) => (\n        <Comment\n          key={index}\n          actions={getAction(comment)}\n          author={comment.author}\n          avatar={\n            <Avatar\n              src={comment.avatar}\n              alt={comment.author}\n            />\n          }\n          content={`${comment.toUserName ? '回复@' + comment.toUserName + ': ' : ''}${comment.content}`}\n          datetime={\n            <Tooltip title={moment(comment.createDate).format('YYYY-MM-DD HH:mm:ss')}>\n              <span>{moment(comment.createDate).fromNow()}</span>\n            </Tooltip>\n          }\n        >\n          {\n            comment.comment ? handleRenderComments(comment.comment) : null\n          }\n        </Comment>\n      ))\n    )\n  }\n\n  return (\n    <>\n      <div className={styles.commenrsWrap}>\n        <Statistic title=\"总评论数\" value={commentCount} valueStyle={{ color: '#ff4d4f' }} />\n        {handleRenderComments(comments)}\n      </div>\n      <Pagination\n        total={pagination.total}\n        current={pagination.current}\n        pageSize={pagination.pageSize}\n        hideOnSinglePage\n        showSizeChanger\n        showQuickJumper\n        onChange={handlePaginationChange}\n        onShowSizeChange={handleShowSiezChange}\n        style={{ textAlign: 'right' }}\n        disabled={isLoading}\n      />\n      <CheckComment\n        visible={checkComment.visible}\n        baseId={checkComment.baseId}\n        onCancel={handelCancel}\n        content={checkComment.content}\n        onCheckComment={onCheckComment}\n        isLoading={isLoading}\n        onCheckCallback={handleCheckCalllback}\n      />\n    </>\n    \n  );\n}\n\nexport default Comments;","import React, { useEffect, useState } from 'react';\nimport { Timeline, Skeleton } from 'antd';\n\nimport { IGoodsLogisticsProps } from '@/types';\nimport styles from './../styles.less';\n\nconst { Item: TimelineItem } = Timeline;\n\nconst Logistics = (props: IGoodsLogisticsProps) => {\n  const { onGetLogistics, baseId, mailNo, mailName, isLoading } = props;\n  const [ logistics, setLogistics ]: [any, any] = useState({});\n\n  useEffect(() => {\n    onGetLogistics({\n      goodsId: baseId,\n      mailNo,\n      mailName\n    }).then((res: any) => {\n      if (res.code === 200) {\n        setLogistics(res.response);\n      }\n    })\n    // eslint-disable-next-line\n  }, [])\n\n  return (\n    <Skeleton loading={isLoading} active>\n      <p className={styles.logisticsName}>{logistics.expTextName} {logistics.mailNo}</p>\n      <p className={styles.logisticsTime}>最后更新于: {logistics.updateStr}</p>\n      <Timeline mode='left'>\n        {\n          Array.isArray(logistics.data) && logistics.data.map((item: any, index: number) => (\n            <TimelineItem key={index} color={index === 0 ? 'blue' : 'gray'}>\n              <p>{item.time}</p>\n              <p>{item.context}</p>\n            </TimelineItem>\n          ))\n        }\n      </Timeline>\n    </Skeleton>\n  );\n}\n\nexport default Logistics;","import React, { useState } from 'react';\nimport { Tabs } from 'antd';\nimport { useParams } from 'react-router-dom';\n\nimport { connect } from 'react-redux';\nimport { getGoodsCommentsPageList, getGoodsLogistics, checkComment } from '@/actions/goods';\nimport { IState } from '@/types';\nimport BaseInfo from './BaseInfo';\nimport Comments from './Comments';\nimport Logistics from './Logistics';\n\nconst { TabPane } = Tabs;\n\nconst Detail = (props:any) => {\n  const historyParams:any = useParams();\n  const [ baseInfo ] = useState(JSON.parse(decodeURIComponent(historyParams.goodsInfo)));\n  const { getGoodsCommentsPageList, getGoodsLogistics, isLoading, checkComment } = props;\n\n  return (\n    <Tabs defaultActiveKey=\"1\">\n      <TabPane tab=\"基本信息\" key=\"1\">\n        <BaseInfo baseInfo={baseInfo} />\n      </TabPane>\n      <TabPane tab=\"评论\" key=\"2\">\n        <Comments baseId={baseInfo.id} onGetComment={getGoodsCommentsPageList} commentCount={baseInfo.commentCount} isLoading={isLoading} onCheckComment={checkComment} />\n      </TabPane>\n      {\n        baseInfo.state >= 32 && (\n          <TabPane tab=\"物流信息\" key=\"3\">\n            <Logistics baseId={baseInfo.id} mailNo={baseInfo.id} mailName={baseInfo.mailName} onGetLogistics={getGoodsLogistics} isLoading={isLoading} />\n          </TabPane>\n        )\n      }\n    </Tabs>\n  )\n}\n\nconst mapStateToProps = (state: IState) => ({\n  isLoading: state.system.isLoading\n});\n\nexport default connect(mapStateToProps, {\n  getGoodsCommentsPageList,\n  getGoodsLogistics,\n  checkComment\n})(Detail);"],"sourceRoot":""}